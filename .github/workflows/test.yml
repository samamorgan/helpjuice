name: Python üêç package üì¶ test

on:
  pull_request:
    branches:
      - master
      - develop
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  get-python-versions:
    runs-on: ubuntu-latest
    outputs:
      python-matrix: ${{ steps.get-python-versions-action.outputs.latest-python-versions }}
    steps:
      - uses: snok/latest-python-versions@v1
        id: get-python-versions-action
        with:
          min-version: 3.8

  test:
    needs: [get-python-versions]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ${{ fromJson(needs.get-python-versions.outputs.python-matrix) }}

    steps:
      - name: Checkout ${{ github.repository }}
        uses: actions/checkout@v3

      - name: Setup Python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Load cached environment
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Install dependencies
        run: poetry install --with test --no-interaction

      - name: Run tests
        run: poetry run pytest --cov

      - name: Upload code coverage reports
        uses: codecov/codecov-action@v3
